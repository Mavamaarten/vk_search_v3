<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Commands="clr-namespace:vk_search_v3.Commands"
             xmlns:util="clr-namespace:vk_search_v3.Util"
             x:Class="vk_search_v3.App"
             StartupUri="Windows/MainWindow.xaml">
    <Application.Resources>

        <ContextMenu x:Key="ItemContextMenu" Background="Black">
            <MenuItem Command="Commands:PlayerCommands.PlayNext" Background="Black" Foreground="White" Height="32">
                <MenuItem.Header>
                    <TextBlock Text="Play next" VerticalAlignment="Center"/>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="Commands:PlayerCommands.AddToQueue" Background="Black" Foreground="White" Height="32">
                <MenuItem.Header>
                    <TextBlock Text="Add to queue" VerticalAlignment="Center"/>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="Commands:PlayerCommands.AddToPlaylist" Background="Black" Foreground="White" Height="32">
                <MenuItem.Header>
                    <TextBlock Text="Add to playlist" VerticalAlignment="Center"/>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="Commands:PlayerCommands.Download" Background="Black" Foreground="White" Height="32">
                <MenuItem.Header>
                    <TextBlock Text="Download" VerticalAlignment="Center"/>
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu>

        <Style x:Key="MainContextMenuItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
        </Style>
        
        <Style x:Key="MetroListviewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="BorderBrush" Value="Silver"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border SnapsToDevicePixels="True"
    						BorderBrush="{x:Null}"
    						BorderThickness="1"
    						Background="{TemplateBinding Background}">
                            <Border x:Name="InnerBorder" BorderThickness="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition MaxHeight="11" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <GridViewRowPresenter Grid.RowSpan="2" 
    									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
    									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#222"/>
                                <Setter Property="BorderBrush"  Value="#11ffffff"/>
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#FC0072C6"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="#FF1172Cf"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MainListviewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{util:MultiStyle MainContextMenuItemStyle MetroListviewItemStyle}">
            
        </Style>

        <Style x:Key="MetroListviewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <TextBlock Foreground="White" FontSize="16" Text="{TemplateBinding Content}" Padding="5" Width="{TemplateBinding Width}" TextAlignment="Left" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundButton" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="99" BorderBrush="Gray" Background="{TemplateBinding Background}" BorderThickness="1.5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="99" BorderBrush="Silver" Background="{TemplateBinding Background}" BorderThickness="1.5">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="99" BorderBrush="Gray" Background="{TemplateBinding Background}" BorderThickness="1.5">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Application.Resources>
</Application>
